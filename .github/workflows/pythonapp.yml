# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python App YAML

on:
  push:
    branches: [ main, Faris ]
  pull_request:
    branches: [ main, Faris ]   
  
jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Testing Game (Pytest)
      id: Pytest
      run: |
           pytest -v --junitxml=report.xml
    - if: ${{failure()}}       
      name: Create Issue if test failed
      uses: nashmaniac/create-issue-action@v1.1
      with:
          title: Test Failed
          token: ${{ secrets.GITHUB_TOKEN }}
          assignees: ${{github.actor}}
          labels: workflow-failed
          body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}

    - name: Generate Python Docs
      uses: jbheard/markdown-docs@v1
    - name: Open docs update pull request
      uses: peter-evans/create-pull-request@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Executable
      run: |
           pyinstaller --onefile menu
           
    - name: Build and Deploy
      uses: JacksonMaxfield/github-pages-deploy-action-python@2.1.0
      env:
        ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BASE_BRANCH: main # The branch the action should deploy from.
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: docs/ # The folder the action should deploy. This example folder is generated by Sphinx
        BUILD_SCRIPT: pip install .[all] && make docs-build && touch docs/.nojekyll # The build script the action should run prior to deploying.
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: artifact/
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: my-artifact
        path: artifact\\

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.5
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: report.xml

    - name: Create Documentation
      run: |
        python -m pydoc -w code
        mv *.html ./documentation
    - name: Create Documentation (Combat)
      run: |
        python -m pydoc -w ./code/combat
        mv combat.html ./documentation
 

       

 
    
   

  
